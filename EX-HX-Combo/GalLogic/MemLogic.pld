/* Implements glue logic. */
Name     MemLogic;
PartNo   EXHXMEM ;
Date     19/06/2021 ;
Revision 01 ;
Designer Jayeson Lee-Steere ;
Company  Titanium Studios Pty Ltd ;
Assembly None ;
Location  ;
Device   G16V8AS;

/* *************** INPUT PINS *********************/
PIN  1  = !BASE_RAM_ENABLE       ; /* Base RAM enable jumper */
PIN  2  = BASE_RAM_SIZE          ; /* Base RAM size jumper */
PIN  3  = !UMB_ENABLE             ; /* UMB enable jumper */
PIN  4  = UMB_SIZE               ; /* UMB size jumper */
PIN  5  = !MEMR                  ; /* ISA memory read */
PIN  6  = A15                    ; /* ISA address line */
PIN  7  = A16                    ; /* ISA address line */
PIN  8  = A17                    ; /* ISA address line */
PIN  9  = A18                    ; /* ISA address line */
PIN 11  = A19                    ; /* ISA address line */
PIN 12  = IOR_DECODE             ; /* The IoLogic has decoded a read from board IO */

/* *************** OUTPUT PINS *********************/
PIN 13  = !BUF_READ              ; /* Whether reading from board. Selects direction of bus transceiver. */
PIN 14  = !IOR_DELAYED           ; /* IOR, delayed to come slightly after setting BUF_DIR for reads. */
PIN 15  = !MEMR_DELAYED          ; /* MEMR, delayed to come slightly after setting BUF_DIR for reads. */
PIN 16  = A17_MAPPED           ; /* SRAM A17, remapped as needed by the memory decoding */
PIN 17  = A18_MAPPED           ; /* SRAM A18, remapped as needed by the memory decoding */
PIN 18  = !CE_RAM_DECODE         ; /* Chip select SRAM. */
PIN 19  = !CE_BIOS_DECODE        ; /* Chip select BIOS Flash ROM. */

/* Equations */
DECODE_C000 = A19 & A18 & !A17 & !A16 & !A15;
DECODE_C800 = A19 & A18 & !A17 & !A16 & A15;
DECODE_D000 = A19 & A18 & !A17 &  A16 & !A15;
DECODE_D800 = A19 & A18 & !A17 &  A16 & A15;
DECODE_E000 = A19 & A18 & A17 & !A16 & !A15;
DECODE_E800 = A19 & A18 & A17 & !A16 & A15;

CE_BIOS_DECODE_TEMP = DECODE_C000;

BASE_RAM_DECODE_1ST_128 = !A19 & !A18 & !A17 & !BASE_RAM_SIZE;
BASE_RAM_DECODE_2ND_128 = !A19 & !A18 & A17;
BASE_RAM_DECODE_3RD_128 = !A19 & A18 & !A17;
BASE_RAM_DECODE = (BASE_RAM_DECODE_1ST_128 # BASE_RAM_DECODE_2ND_128 # BASE_RAM_DECODE_3RD_128) & BASE_RAM_ENABLE;

UMB_DECODE_C800 = DECODE_C800;
UMB_DECODE_D000 = DECODE_D000;
UMB_DECODE_D800 = DECODE_D800;
UMB_DECODE_E000 = DECODE_E000 & UMB_SIZE;
UMB_DECODE_E800 = DECODE_E800 & UMB_SIZE & BASE_RAM_SIZE;
UMB_DECODE_TEMP = (UMB_DECODE_C800 # UMB_DECODE_D000 # UMB_DECODE_D800 # UMB_DECODE_E000 # UMB_DECODE_E800) & UMB_ENABLE;

CE_RAM_DECODE_TEMP = BASE_RAM_DECODE # UMB_DECODE_TEMP;

MEMR_DECODE_TEMP = (CE_BIOS_DECODE_TEMP # CE_RAM_DECODE_TEMP) & MEMR;

A17_MAPPED_TEMP = (DECODE_C800 # DECODE_D000 # DECODE_D800) $ A17;
A18_MAPPED_TEMP = DECODE_E800 $ A18;

BUF_READ_TEMP = MEMR_DECODE_TEMP # IOR_DECODE;

/* Outputs */
A17_MAPPED = A17_MAPPED_TEMP;
A18_MAPPED = A18_MAPPED_TEMP;
CE_RAM_DECODE = CE_RAM_DECODE_TEMP;
CE_BIOS_DECODE = CE_BIOS_DECODE_TEMP;

BUF_READ = BUF_READ_TEMP;
/* Intentionally uses BUF_READ rather than BUF_READ_TEMP to slightly delay the 
   IOR and MEMR signals. This is to ensure the buffer direction does not change
   **after** the devices on the board are trying to output values. */
IOR_DELAYED = BUF_READ & IOR_DECODE;
MEMR_DELAYED = BUF_READ & MEMR_DECODE_TEMP;
